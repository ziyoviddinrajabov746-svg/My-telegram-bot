main.pyimport os
import requests
from telegram import Update
from telegram.ext import Application, CommandHandler, MessageHandler, filters, ContextTypes

# –¢–≤–æ–∏ –∫–ª—é—á–∏ (–∏—Ö –Ω–∞—Å—Ç—Ä–æ–∏–º –ø–æ–∑–∂–µ)
TELEGRAM_TOKEN = os.getenv('TELEGRAM_TOKEN')
OPENROUTER_API_KEY = os.getenv('OPENROUTER_API_KEY')

# –ö–æ–≥–¥–∞ –ø–∏—à–µ—à—å /start
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text('ü§ñ –ü—Ä–∏–≤–µ—Ç! –Ø —Ç–≤–æ–π DeepSeek –±–æ—Ç! –ü—Ä–æ—Å—Ç–æ –Ω–∞–ø–∏—à–∏ –º–Ω–µ —á—Ç–æ-–Ω–∏–±—É–¥—å!')

# –ö–æ–≥–¥–∞ –ø–∏—à–µ—à—å —Å–æ–æ–±—â–µ–Ω–∏–µ
async def handle_message(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user_message = update.message.text
    
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å –∫ DeepSeek
    headers = {
        'Authorization': f'Bearer {OPENROUTER_API_KEY}',
        'Content-Type': 'application/json'
    }
    
    data = {
        'model': 'deepseek/deepseek-chat',
        'messages': [{'role': 'user', 'content': user_message}]
    }
    
    try:
        response = requests.post('https://openrouter.ai/api/v1/chat/completions', 
                               headers=headers, json=data)
        result = response.json()
        bot_response = result['choices'][0]['message']['content']
    except:
        bot_response = "–ò–∑–≤–∏–Ω–∏, —è —Å–µ–π—á–∞—Å –Ω–µ –º–æ–≥—É –æ—Ç–≤–µ—Ç–∏—Ç—å üòî"
    
    await update.message.reply_text(bot_response)

# –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
def main():
    app = Application.builder().token(TELEGRAM_TOKEN).build()
    app.add_handler(CommandHandler("start", start))
    app.add_handler(MessageHandler(filters.TEXT, handle_message))
    print("üéâ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω!")
    app.run_polling()

if __name__ == '__main__':
    main()
