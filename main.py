import os
import logging
from telegram import Update
from telegram.ext import Application, CommandHandler, MessageHandler, filters, ContextTypes
from flask import Flask
import threading

# –°–æ–∑–¥–∞–µ–º Flask –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –¥–ª—è Health Check
app = Flask(__name__)

@app.route('/')
def home():
    return "ü§ñ DeepSeek Bot is running!"

@app.route('/healthz')
def health_check():
    return "OK", 200

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–ø—É—Å–∫–∞ Flask –≤ –æ—Ç–¥–µ–ª—å–Ω–æ–º –ø–æ—Ç–æ–∫–µ
def run_flask():
    app.run(host='0.0.0.0', port=5000, debug=False)

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(level=logging.INFO)
logger = logging.getLogger(__name__)

# –ü–æ–ª—É—á–∞–µ–º —Ç–æ–∫–µ–Ω—ã
TELEGRAM_TOKEN = os.getenv('TELEGRAM_TOKEN')
OPENROUTER_API_KEY = os.getenv('OPENROUTER_API_KEY')

print("üîß –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è...")
print(f"TELEGRAM_TOKEN: {'‚úÖ –£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω' if TELEGRAM_TOKEN else '‚ùå –û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç'}")
print(f"OPENROUTER_API_KEY: {'‚úÖ –£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω' if OPENROUTER_API_KEY else '‚ùå –û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç'}")

async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text('ü§ñ –ü—Ä–∏–≤–µ—Ç! –Ø DeepSeek –±–æ—Ç. –ó–∞–¥–∞–π—Ç–µ –º–Ω–µ –≤–æ–ø—Ä–æ—Å!')

async def handle_message(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user_message = update.message.text
    await update.message.reply_text(f'üîç –í—ã –Ω–∞–ø–∏—Å–∞–ª–∏: "{user_message}"\n\n–°–µ–π—á–∞—Å –¥–æ–±–∞–≤–ª—é AI —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª...')

def main():
    if not TELEGRAM_TOKEN:
        print("‚ùå –û–®–ò–ë–ö–ê: TELEGRAM_TOKEN –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω!")
        return
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º Flask –≤ –æ—Ç–¥–µ–ª—å–Ω–æ–º –ø–æ—Ç–æ–∫–µ
    flask_thread = threading.Thread(target=run_flask)
    flask_thread.daemon = True
    flask_thread.start()
    print("‚úÖ Flask —Å–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω –Ω–∞ –ø–æ—Ä—Ç—É 5000")
    
    print("üöÄ –ó–∞–ø—É—Å–∫ Telegram –±–æ—Ç–∞...")
    app_bot = Application.builder().token(TELEGRAM_TOKEN).build()
    app_bot.add_handler(CommandHandler("start", start))
    app_bot.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, handle_message))
    
    print("‚úÖ –ë–æ—Ç —É—Å–ø–µ—à–Ω–æ –∑–∞–ø—É—â–µ–Ω!")
    app_bot.run_polling()

if __name__ == '__main__':
    main()
